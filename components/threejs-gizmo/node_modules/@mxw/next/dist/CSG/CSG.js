"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
//@ts-nocheck
const three_csg_js_1 = __importDefault(require("./three-csg.js"));
class CSG {
    /**
     * Get union of two geometry
     * @param a_geometry
     * @param b_geometry
     * @returns
     */
    static union(a_geometry, b_geometry) {
        let aCSG = three_csg_js_1.default.fromGeometry(a_geometry);
        let bCSG = three_csg_js_1.default.fromGeometry(b_geometry);
        let resultCSG = aCSG.union(bCSG);
        let resultGeometry = three_csg_js_1.default.toGeometry(resultCSG);
        return resultGeometry;
    }
    /**
     * Subtract b from a geometry
     * @param a_geometry
     * @param b_geometry
     * @returns
     */
    static subtract(a_geometry, b_geometry) {
        let aCSG = three_csg_js_1.default.fromGeometry(a_geometry);
        let bCSG = three_csg_js_1.default.fromGeometry(b_geometry);
        let resultCSG = aCSG.subtract(bCSG);
        let resultGeometry = three_csg_js_1.default.toGeometry(resultCSG);
        return resultGeometry;
    }
    /**
     * Intersection of a and b geometry
     * @param a_geometry
     * @param b_geometry
     * @returns
     */
    static intersect(a_geometry, b_geometry) {
        let aCSG = three_csg_js_1.default.fromGeometry(a_geometry);
        let bCSG = three_csg_js_1.default.fromGeometry(b_geometry);
        let resultCSG = aCSG.intersect(bCSG);
        let resultGeometry = three_csg_js_1.default.toGeometry(resultCSG);
        return resultGeometry;
    }
    /**
     * Invert geometry
     * @param a_geometry
     * @returns
     */
    static inverse(a_geometry) {
        let aCSG = three_csg_js_1.default.fromGeometry(a_geometry);
        let resultCSG = aCSG.inverse();
        let resultGeometry = three_csg_js_1.default.toGeometry(resultCSG);
        return resultGeometry;
    }
}
exports.default = CSG;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ1NHLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0NTRy9DU0cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxhQUFhO0FBQ2Isa0VBQWtDO0FBR2xDLE1BQThCLEdBQUc7SUFDL0I7Ozs7O09BS0c7SUFDSCxNQUFNLENBQUMsS0FBSyxDQUNWLFVBQWdDLEVBQ2hDLFVBQWdDO1FBRWhDLElBQUksSUFBSSxHQUFHLHNCQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxHQUFHLHNCQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRXpDLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsSUFBSSxjQUFjLEdBQUcsc0JBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFaEQsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLFFBQVEsQ0FDYixVQUFnQyxFQUNoQyxVQUFnQztRQUVoQyxJQUFJLElBQUksR0FBRyxzQkFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6QyxJQUFJLElBQUksR0FBRyxzQkFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUV6QyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BDLElBQUksY0FBYyxHQUFHLHNCQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWhELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxTQUFTLENBQ2QsVUFBZ0MsRUFDaEMsVUFBZ0M7UUFFaEMsSUFBSSxJQUFJLEdBQUcsc0JBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDekMsSUFBSSxJQUFJLEdBQUcsc0JBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFekMsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLGNBQWMsR0FBRyxzQkFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUVoRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBZ0M7UUFDN0MsSUFBSSxJQUFJLEdBQUcsc0JBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFekMsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQy9CLElBQUksY0FBYyxHQUFHLHNCQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWhELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Q0FDRjtBQXZFRCxzQkF1RUMifQ==