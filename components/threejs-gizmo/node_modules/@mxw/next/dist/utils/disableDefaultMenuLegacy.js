"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const maxwhere_1 = require("maxwhere");
/**
 * Disables default maxwhere menu
 * This method is legacy and should only be used with MaxWhere 5
 */
function disableDefaultMenuLegacy() {
    const where = maxwhere_1.modules.mxwStateProxy.where;
    const onMenuStateChange = (states) => {
        //console.log('current:', states.currentState, 'next:', states.nextState)
        //  state can be where.menustates.EMPTY, CROSSHAIR, PEBBLES
        if (states.nextState === where.menustates.PEBBLES) {
            // in this example, we go to empty mode whenever pebbles ui would be displayed
            // but we could be going from EMPTY to CROSSHAIR, or from CROSSHAIR to EMPTY
            // setTimeout is used to make sure the current state change completes first
            if (states.currentState != where.menustates.EMPTY) {
                setTimeout(() => {
                    where.menu.goMode(where.menustates.EMPTY);
                    //overlay.show();
                }, 0);
            }
            else {
                setTimeout(() => {
                    where.menu.goMode(where.menustates.CROSSHAIR);
                    // TODO: close overlay
                    //overlay.hide();
                }, 0);
            }
        }
    };
    maxwhere_1.modules.mxwStateProxy.where.on('menu-state-change', onMenuStateChange);
}
exports.default = disableDefaultMenuLegacy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzYWJsZURlZmF1bHRNZW51TGVnYWN5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL2Rpc2FibGVEZWZhdWx0TWVudUxlZ2FjeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFtQztBQUVuQzs7O0dBR0c7QUFDSCxTQUF3Qix3QkFBd0I7SUFDOUMsTUFBTSxLQUFLLEdBQUcsa0JBQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO0lBRTFDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxNQUcxQixFQUFFLEVBQUU7UUFDSCx5RUFBeUU7UUFDekUsMkRBQTJEO1FBQzNELElBQUksTUFBTSxDQUFDLFNBQVMsS0FBSyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRTtZQUNqRCw4RUFBOEU7WUFDOUUsNEVBQTRFO1lBQzVFLDJFQUEyRTtZQUMzRSxJQUFJLE1BQU0sQ0FBQyxZQUFZLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUU7Z0JBQ2pELFVBQVUsQ0FBQyxHQUFHLEVBQUU7b0JBQ2QsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFFMUMsaUJBQWlCO2dCQUNuQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDUDtpQkFBTTtnQkFDTCxVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQzlDLHNCQUFzQjtvQkFDdEIsaUJBQWlCO2dCQUNuQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDUDtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsa0JBQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3pFLENBQUM7QUE5QkQsMkNBOEJDIn0=