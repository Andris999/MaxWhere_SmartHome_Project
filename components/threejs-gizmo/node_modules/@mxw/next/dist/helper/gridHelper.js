"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const gridHelperBase_1 = __importDefault(require("./gridHelperBase"));
const THREE = __importStar(require("@mxw/three"));
class GridHelper extends gridHelperBase_1.default {
    /**
     * The GridHelper is an object to define grids. Grids are two-dimensional arrays of lines.
     * @param size The size of the grid. Default is 10.
     * @param divisions The number of divisions across the grid. Default is 10.
     * @param addPhysical whether to add physical shape
     * @param colorCenterLine The color of the centerline. This can be a Color, a hexadecimal value and an CSS-Color name. Default is 0x444444
     * @param colorGrid The color of the lines of the grid. This can be a Color, a hexadecimal value and an CSS-Color name. Default is 0x888888
     */
    constructor(size, divisions, addPhysical, colorCenterLine, colorGrid) {
        super();
        this.addPhysical = addPhysical;
        //@ts-ignore
        this.threeGridHelper = new THREE.GridHelper(size, divisions, colorCenterLine, colorGrid);
        this.drawGrid();
    }
}
exports.default = GridHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZEhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXIvZ3JpZEhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0VBQThDO0FBQzlDLGtEQUFtQztBQUNuQyxNQUFxQixVQUFXLFNBQVEsd0JBQWM7SUFDbEQ7Ozs7Ozs7T0FPRztJQUNILFlBQ0UsSUFBYSxFQUNiLFNBQWtCLEVBQ2xCLFdBQXFCLEVBQ3JCLGVBQTZCLEVBQzdCLFNBQXVCO1FBRXZCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsWUFBWTtRQUNaLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxLQUFLLENBQUMsVUFBVSxDQUN6QyxJQUFJLEVBQ0osU0FBUyxFQUNULGVBQWUsRUFDZixTQUFTLENBQ1YsQ0FBQztRQUVGLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0NBQ0Y7QUE1QkgsNkJBNEJHIn0=